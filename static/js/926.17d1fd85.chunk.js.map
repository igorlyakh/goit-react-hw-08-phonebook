{"version":3,"file":"static/js/926.17d1fd85.chunk.js","mappings":"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","sources":["components/AddContactForm/AddContactForm.styled.js","components/AddContactForm/AddContactForm.jsx","components/ListItem/ListItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  ErrorMessage as FormikError,\n  Field as FormikField,\n  Form as FormikForm,\n} from 'formik';\n\nexport const Wrapper = styled.div`\n  border: 1px solid black;\n  padding: 15px;\n  width: 400px;\n  margin-top: 50px;\n  margin-left: 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 5px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { createContact } from '../../redux/actions';\nimport { selectContacts } from '../../redux/selectors';\nimport {\n  ErrorMessage,\n  Field,\n  Form,\n  Label,\n  Wrapper,\n} from './AddContactForm.styled';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').required('Required!'),\n  number: Yup.string()\n    .matches(\n      new RegExp(/^\\d{3}-\\d{2}-\\d{2}$/),\n      'number number must be in the format \"000-00-00\"'\n    )\n    .required('Required!'),\n});\n\nconst AddContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onNameSubmit = person => {\n    const checkContact = contacts.some(\n      contact => contact.name.toLowerCase() === person.name.toLowerCase()\n    );\n    if (checkContact) {\n      alert(`${person.name} is already in contacts.`);\n      return;\n    }\n    dispatch(createContact(person));\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={(values, actions) => {\n          onNameSubmit(values);\n          actions.resetForm();\n        }}\n        validationSchema={validationSchema}\n      >\n        <Form>\n          <Label>\n            Name\n            <Field name=\"name\" placeholder=\"Alex\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </Label>\n\n          <Label>\n            number\n            <Field name=\"number\" type=\"tel\" placeholder=\"000-00-00\" />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </Label>\n\n          <button type=\"submit\">Add contact</button>\n        </Form>\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default AddContactForm;\n","const ListItem = ({ name, phone, id, onDelete }) => {\n  return (\n    <li>\n      <span>{name}</span>: <span>{phone}</span>{' '}\n      <button onClick={() => onDelete(id)}>Delete</button>\n    </li>\n  );\n};\n\nexport default ListItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  border: 1px solid black;\n  padding: 15px;\n  width: 400px;\n  margin-top: 50px;\n  margin-left: 50px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-left: 15px;\n`;\n","import ListItem from 'components/ListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact } from '../../redux/actions';\nimport { selectContacts } from '../../redux/selectors';\nimport { List, Wrapper } from './ContactsList.styled';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const onDelete = id => {\n    dispatch(removeContact(id));\n  };\n\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Wrapper>\n      <h2>Contacts</h2>\n\n      <List>\n        {contacts?.map(contact => {\n          return (\n            <ListItem\n              name={contact.name}\n              phone={contact.number}\n              id={contact.id}\n              onDelete={onDelete}\n              key={contact.id}\n            />\n          );\n        })}\n      </List>\n    </Wrapper>\n  );\n};\n\nexport default ContactsList;\n","import AddContactForm from 'components/AddContactForm';\nimport ContactsList from 'components/ContactsList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/actions';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <AddContactForm />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Form","FormikForm","_templateObject2","Field","FormikField","_templateObject3","ErrorMessage","FormikError","_templateObject4","Label","_templateObject5","validationSchema","Yup","shape","name","min","required","number","matches","RegExp","dispatch","useDispatch","contacts","useSelector","selectContacts","onNameSubmit","person","some","contact","toLowerCase","alert","concat","createContact","_jsx","children","Formik","initialValues","onSubmit","values","actions","resetForm","_jsxs","placeholder","component","type","_ref","phone","id","onDelete","onClick","List","removeContact","map","ListItem","useEffect","getContacts","_Fragment","AddContactForm","ContactsList"],"sourceRoot":""}